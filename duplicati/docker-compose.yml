version: "2.1"

services:
  duplicati:
    image: linuxserver/duplicati
    container_name: duplicati
    environment:
      # The user and process run as ROOT to allow backup of all files without any difficulties (eg LetsEncrypt certs)
      - PUID=0
      - PGID=0
      #NB: Default PUID and PGID is 1000
      - TZ=Australia/Perth
      # Optional Duplicati CLI arguments:
      #- CLI_ARGS=
    volumes:
      # Duplicati persistent volume for its configuration data:
      - duplicati-app-data:/config
      # Backup destination location for tar.gz (etc) files to be stored - this is a CIFS/SMB network share that maps to NAS, bind mount:
      - /mnt/behemoth/Duplicati:/backups-destination
      # Sharing the local scripts folder to access the pre and post backup scripts on Loki
      - /opt/bin:/loki-scripts
      # System mounts to allow Duplicati to stop and start containers with scripts:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      # *** BACKUP SOURCES ***:
      # Database backup dumps folder (dumped daily by the database backup script):
      - /var/backups-databases:/backups-source/backups-databases
      # Duplicati's own config data (just another mapping of the same volume listed above, for simplicity of backups):
      - duplicati-app-data:/backups-source/duplicati-app-data
      # Nginx volumes (read-only):
      - nginxpm-data:/backups-source/nginxpm-data:ro
      - nginxpm-letsencrypt:/backups-source/nginxpm-letsencrypt:ro
      # NextCloud volumes (read-only - NB: likely do not need to be backing up Redis, but doing it anyway in case of a crash with Redis holding data not yet flushed):
      - nextcloud-app-data:/backups-source/nextcloud-app-data:ro
      - nextcloud-db-data:/backups-source/nextcloud-db-data:ro
      - nextcloud-redis-data:/backups-source/nextcloud-redis-data:ro
      # Portainer volume (read-only):
      - portainer-app-data:/backups-source/portainer-app-data:ro
      # Diun volume (read-only):
      - diun-app-data:/backups-source/diun-app-data:ro
      # Ampache volumes (read-only):
      - ampache-app-data:/backups-source/ampache-app-data:ro
      - ampache-db-data:/backups-source/ampache-db-data:ro
      - ampache-log-data:/backups-source/ampache-log-data:ro
      # Navidrome volume (read-only):
      - navidrome-app-data:/backups-source/navidrome-app-data:ro
    labels:
      # Set to update automatically via Watchtower with below label
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - 8200:8200
    # Add to the pre-existing NGINX Proxy Manager network
    networks:
      - nginxpm-frontend
    restart: unless-stopped

volumes:
  # Duplicati's app data volume of course:
  duplicati-app-data:
    external: true
    name: duplicati-app-data
  # Additionally, each folder referenced in the Services config (above) for Duplicati must be sourced here:
  nginxpm-data:
    external: true
    name: nginxpm-data
  nginxpm-letsencrypt:
    external: true
    name: nginxpm-letsencrypt
  nextcloud-app-data:
    external: true
    name: nextcloud-app-data
  nextcloud-db-data:
    external: true
    name: nextcloud-db-data
  nextcloud-redis-data:
    external: true
    name: nextcloud-redis-data  
  portainer-app-data:
    external: true
    name: portainer-app-data
  diun-app-data:
    external: true
    name: diun-app-data
  ampache-app-data:
    external: true
    name: ampache-app-data
  ampache-db-data:
    external: true
    name: ampache-db-data
  ampache-log-data:
    external: true
    name: ampache-log-data
  navidrome-app-data:
    external: true
    name: navidrome-app-data

networks:
  # Frontend network for NGINX Proxy Manager to allow proxy protection of the site
  nginxpm-frontend:
    external: true