version: '3'

volumes:
  # Volumes pre-exist, so set them as external
  nextcloud-app-data:
    external: true
  nextcloud-db-data:
    external: true

networks:
  # Add to the pre-existing NGINX Proxy Manager network
  nginxpm-frontend:
    external: true
  # Create backend network for the database to be isolated
  nextcloud-backend:
    name: nextcloud-backend

services:

  #NB: Reminder to set the MYSQL password environmental variables during deployment (as noted below)!

  nextcloud-app:
    image: nextcloud:apache
    container_name: nextcloud-app
    restart: always
    ports:
      - 8080:80
    volumes:
      - nextcloud-app-data:/var/www/html
    environment:
      #NB: This variable 'NEXTCLOUD_APP_MYSQL_PASSWORD' must be set in Portainer environment variables during deployment!
      - MYSQL_PASSWORD=${NEXTCLOUD_APP_MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=nextcloud-db
      - OVERWRITEPROTOCOL=https
      - REDIS_HOST=nextcloud-redis
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    networks:
      - nginxpm-frontend
      - nextcloud-backend

  nextcloud-db:
    image: mariadb
    container_name: nextcloud-db
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - nextcloud-db-data:/var/lib/mysql
    environment:
      #NB: These variables 'NEXTCLOUD_DB_MYSQL_ROOT_PASSWORD' & 'NEXTCLOUD_APP_MYSQL_PASSWORD' must be set in Portainer environment variables during deployment!
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DB_MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${NEXTCLOUD_APP_MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    networks:
      - nextcloud-backend

  #Redis is an object cache server used as a DB cache for improved performance
  nextcloud-redis:
    container_name: nextcloud-redis
    image: redis:alpine
    restart: always
    networks:
      - nginxpm-frontend
      - nextcloud-backend

  #This second container is required to run the background cron job
  nextcloud-cron:
    container_name: nextcloud-cron  
    image: nextcloud:apache
    restart: always
    volumes:
      - nextcloud-app-data:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    networks:
      - nginxpm-frontend
      - nextcloud-backend

